// Generated by CoffeeScript 1.6.3
(function() {
  var Func, Null, Nullable, Struct, Undefined;

  Null = function() {
    return null;
  };

  Undefined = function() {
    return void 0;
  };

  Nullable = (function() {
    function Nullable(type) {
      if (this instanceof Nullable) {
        this.type = type;
      } else {
        return (function(func, args, ctor) {
          ctor.prototype = func.prototype;
          var child = new ctor, result = func.apply(child, args);
          return Object(result) === result ? result : child;
        })(Nullable, arguments, function(){});
      }
    }

    return Nullable;

  })();

  Undefined = (function() {
    function Undefined() {
      if (this instanceof Undefined) {

      } else {
        return new Undefined;
      }
    }

    return Undefined;

  })();

  Null = (function() {
    function Null() {
      if (this instanceof Null) {

      } else {
        return new Null;
      }
    }

    return Null;

  })();

  Struct = (function() {
    function Struct() {}

    return Struct;

  })();

  Func = (function() {
    function Func(args, returns) {
      if (this instanceof Func) {
        this.args = args;
        this.returns = returns;
      } else {
        return (function(func, args, ctor) {
          ctor.prototype = func.prototype;
          var child = new ctor, result = func.apply(child, args);
          return Object(result) === result ? result : child;
        })(Func, arguments, function(){});
      }
    }

    return Func;

  })();

  module.exports = {
    Number: Number,
    String: String,
    Boolean: Boolean,
    Null: Null,
    Undefined: Undefined,
    Nullable: Nullable,
    Struct: Struct,
    Func: Func
  };

}).call(this);
